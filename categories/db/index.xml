<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>db on Jiang . &#39;s blog</title>
    <link>https://jfy0o0.github.io/categories/db/</link>
    <description>Recent content in db on Jiang . &#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jan 2021 13:56:14 +0800</lastBuildDate><atom:link href="https://jfy0o0.github.io/categories/db/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>db - rdbms</title>
      <link>https://jfy0o0.github.io/2021/db-rdbms/</link>
      <pubDate>Wed, 20 Jan 2021 13:56:14 +0800</pubDate>
      
      <guid>https://jfy0o0.github.io/2021/db-rdbms/</guid>
      <description>sql  SQL是结构化查询语言的缩写，用来访问和操作数据库系统。 SQL语句既可以查询数据库中的数据，也可以添加、更新和删除数据库中的数据，还可以对数据库进行管理和维护操作。 不同的数据库，都支持SQL，这样，我们通过学习SQL这一种语言，就可以操作各种不同的数据库。  能力 总的来说，SQL语言定义了这么几种操作数据库的能力：
DDL：Data Definition Language
​	DDL允许用户定义数据，也就是创建表、删除表、修改表结构这些操作。通常，DDL由数据库管理员执行。
DML：Data Manipulation Language
​	DML为用户提供添加、删除、更新数据的能力，这些是应用程序对数据库的日常操作。
DQL：Data Query Language
​	DQL允许用户查询数据，这也是通常最频繁的数据库日常操作。
语法特点  SQL语言关键字不区分大小写！！！ 但是，针对不同的数据库，对于表名和列名，有的数据库区分大小写，有的数据库不区分大小写。 同一个数据库，有的在Linux上区分大小写，有的在Windows上不区分大小写。  数据模型 数据库按照数据结构来组织、存储和管理数据，实际上，数据库一共有三种模型：
 层次模型 (树) 网状模型 (图) 关系模型 (表)  rdbms 数据类型 对于一个关系表，除了定义每一列的名称外，还需要定义每一列的数据类型。关系数据库支持的标准数据类型包括数值、字符串、时间等：
   名称 类型 说明     INT 整型 4字节整数类型，范围约+/-21亿   BIGINT 长整型 8字节整数类型，范围约+/-922亿亿   REAL 浮点型 4字节浮点数，范围约+/-1038   DOUBLE 浮点型 8字节浮点数，范围约+/-10308   DECIMAL(M,N) 高精度小数 由用户指定精度的小数，例如，DECIMAL(20,10)表示一共20位，其中小数10位，通常用于财务计算   CHAR(N) 定长字符串 存储指定长度的字符串，例如，CHAR(100)总是存储100个字符的字符串   VARCHAR(N) 变长字符串 存储可变长度的字符串，例如，VARCHAR(100)可以存储0~100个字符的字符串   BOOLEAN 布尔类型 存储True或者False   DATE 日期类型 存储日期，例如，2018-06-22   TIME 时间类型 存储时间，例如，12:20:59   DATETIME 日期和时间类型 存储日期+时间，例如，2018-06-22 12:20:59    关系模型  表的每一行称为记录（Record），记录是一个逻辑意义上的数据。 表的每一列称为字段（Column），同一个表的每一行记录都拥有相同的若干字段。  主键 在关系数据库中，一张表中的每一行数据被称为一条记录。一条记录就是由多个字段组成的。例如，students表的两行记录：</description>
    </item>
    
  </channel>
</rss>
